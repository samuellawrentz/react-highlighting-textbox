// Generated by CodiumAI
import React from 'react';
import HighlightInputBox from './index';
import { shallow, mount } from 'enzyme';
// Generated by CodiumAI

describe('HighlightInputBox_class', () => {
  // Tests that the HighlightInputBox component renders with default props
  it('test_default_props', () => {
    const wrapper = shallow(<HighlightInputBox />);
    expect(wrapper).toMatchSnapshot();
  });

  // Tests that the HighlightInputBox component renders with custom props
  it('test_custom_props', () => {
    const wrapper = shallow(
      <HighlightInputBox
        value="Hello World"
        word="Hello"
        highlightClassName="highlight"
        onChange={() => {}}
        onBlur={() => {}}
        onKeyUp={() => {}}
        onClick={() => {}}
      />,
    );
    expect(wrapper).toMatchSnapshot();
  });

  // Tests that the word is not highlighted if it is too long
  it('test_word_too_long', () => {
    const wrapper = shallow(<HighlightInputBox value="Hello World" word="ThisIsAVeryLongWordThatShouldNotBeHighlighted" />);
    expect(wrapper).toMatchSnapshot();
  });

  // Tests that the word is not highlighted if it is not found in the input box
  it('test_word_not_found', () => {
    const wrapper = shallow(<HighlightInputBox value="Hello World" word="Goodbye" />);
    expect(wrapper).toMatchSnapshot();
  });

  // Tests that the word is not highlighted if it is an empty string
  it('test_empty_word', () => {
    const wrapper = shallow(<HighlightInputBox value="Hello World" word="" />);
    expect(wrapper).toMatchSnapshot();
  });

  // Tests that the HTML content is not updated if the value of the input box is null
  it('test_null_value', () => {
    const wrapper = shallow(<HighlightInputBox value={null} word="Hello" />);
    expect(wrapper).toMatchSnapshot();
  });

  // Tests that the word is highlighted when it is a number
  it('test_word_highlight_number', () => {
    const wrapper = shallow(<HighlightInputBox value="12345" word="12345" />);
    expect(wrapper.find('.sam-react-highlight-span')).toHaveLength(1);
  });

  // Tests that the HighlightInputBox component correctly highlights an array of numbers
  it('test_word_highlight_array', () => {
    const wrapper = mount(<HighlightInputBox value="" word={[1, 2, 3]} />);
    const htmlContent = wrapper.find('ContentEditable').prop('html');
    expect(htmlContent).toContain('<span class="sam-react-highlight-span">1</span>');
    expect(htmlContent).toContain('<span class="sam-react-highlight-span">2</span>');
    expect(htmlContent).toContain('<span class="sam-react-highlight-span">3</span>');
  });

  // Tests that the HTML content is empty when the value of the input box is undefined
  it('test_value_undefined', () => {
    const wrapper = mount(<HighlightInputBox value={undefined} />);
    expect(wrapper.find('ContentEditable').prop('html')).toBe('');
  });
});
